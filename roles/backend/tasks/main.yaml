- name: install pip libs
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
  - PyMySQL 
  - cryptography

- name: disable current node js
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable node js20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - nodejs
    - mysql

- name: add user
  ansible.builtin.user:
    name: expense

- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: download the file
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip file
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: install dependencies
  community.general.npm:
    path: /app

- name: copy backend service
  ansible.builtin.copy:
    src: be.service
    dest: /etc/systemd/system/backend.service

- name: import mysql data
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: root
    login_password: "{{ r_pw }}"
    login_host: mysql.katta.blog
    target: /app/schema/backend.sql

- name: demon reload
  ansible.builtin.systemd_service:
    enabled: true
    state: restarted
    daemon_reload: true
    name: backend
